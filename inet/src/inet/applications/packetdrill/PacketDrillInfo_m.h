//
// Generated file, do not edit! Created by opp_msgtool 6.0 from inet/applications/packetdrill/PacketDrillInfo.msg.
//

#ifndef __PACKETDRILLINFO_M_H
#define __PACKETDRILLINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif

class PacketDrillInfo;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

/**
 * Class generated from <tt>inet/applications/packetdrill/PacketDrillInfo.msg:23</tt> by opp_msgtool.
 * <pre>
 * message PacketDrillInfo
 * {
 *     simtime_t scriptTime;
 *     simtime_t scriptTimeEnd;
 *     simtime_t offset;
 *     uint16_t timeType;
 *     simtime_t liveTime;
 * }
 * </pre>
 */
class INET_API PacketDrillInfo : public ::omnetpp::cMessage
{
  protected:
    omnetpp::simtime_t scriptTime = SIMTIME_ZERO;
    omnetpp::simtime_t scriptTimeEnd = SIMTIME_ZERO;
    omnetpp::simtime_t offset = SIMTIME_ZERO;
    uint16_t timeType = 0;
    omnetpp::simtime_t liveTime = SIMTIME_ZERO;

  private:
    void copy(const PacketDrillInfo& other);

  protected:
    bool operator==(const PacketDrillInfo&) = delete;

  public:
    PacketDrillInfo(const char *name=nullptr, short kind=0);
    PacketDrillInfo(const PacketDrillInfo& other);
    virtual ~PacketDrillInfo();
    PacketDrillInfo& operator=(const PacketDrillInfo& other);
    virtual PacketDrillInfo *dup() const override {return new PacketDrillInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual omnetpp::simtime_t getScriptTime() const;
    virtual void setScriptTime(omnetpp::simtime_t scriptTime);

    virtual omnetpp::simtime_t getScriptTimeEnd() const;
    virtual void setScriptTimeEnd(omnetpp::simtime_t scriptTimeEnd);

    virtual omnetpp::simtime_t getOffset() const;
    virtual void setOffset(omnetpp::simtime_t offset);

    virtual uint16_t getTimeType() const;
    virtual void setTimeType(uint16_t timeType);

    virtual omnetpp::simtime_t getLiveTime() const;
    virtual void setLiveTime(omnetpp::simtime_t liveTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PacketDrillInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PacketDrillInfo& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline PacketDrillInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<PacketDrillInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PACKETDRILLINFO_M_H

